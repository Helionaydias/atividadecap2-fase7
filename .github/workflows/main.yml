name: Continuous Integration

on:
  pull_request:  # Aciona para pull requests
  push:          # Aciona para pushs
    branches:
      - '*'  # Isso significa qualquer branch

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'   # Definindo o Java 17 para o seu projeto
          distribution: 'temurin'

      - name: Build and test
        run: mvn clean test # Esse comando vai rodar os testes

  deploy:
    runs-on: ubuntu-latest
    needs: continuous-integration  # Esse job depende do anterior
    if: success()  # Esse job só será executado se o job anterior for bem-sucedido
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Defina seu username do Docker Hub nos segredos do GitHub
          password: ${{ secrets.DOCKER_PASSWORD }} # Defina seu token de acesso do Docker Hub nos segredos do GitHub

      - name: Build Docker image
        run: docker build -t helionay/cadstrousuarios:v1 .

      - name: Push Docker image
        run: docker push helionay/cadstrousuarios:v1

      - name: Deploy application
        run: |
          echo "Deploying application..."
          # Adicione aqui seu comando de deploy, como comandos para o Azure se aplicável
