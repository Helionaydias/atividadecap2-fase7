name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - '*'  # Qualquer branch

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test with Maven
        run: |
          mvn clean install   # Constrói o projeto e gera o arquivo .jar
          mvn test            # Executa os testes

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: continuous-integration

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Docker Image
        env:
          IMAGE_NAME: "${{ secrets.REGISTRY_URL }}/smartcity-waste-management:latest"
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy_to_azure:
    runs-on: ubuntu-latest
    needs: build_and_push_docker
    if: success()  # Só executa se o build anterior for bem-sucedido

    steps:
      - name: Azure Web Apps Deploy
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_APP_NAME }}  # Nome do Web App
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}  # Perfil de publicação
          images: ${{ secrets.REGISTRY_URL }}/smartcity-waste-management:latest
